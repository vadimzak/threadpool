{"version":3,"sources":["../src/ThreadPool.test.js"],"names":["describe","it","nums","tp","res","i","_i","queue","push","run","closeAndWaitComplete","to","eql"],"mappings":";;AAAA;;;;AACA;;AACA;;;;;;AAEAA,SAAS,YAAT,EAAuB,MAAM;AAC3BC,KAAG,mCAAH,oBAAwC,aAAY;AAClD,QAAIC,OAAO,CAAX;AACA,QAAIC,KAAK,yBAAeD,IAAf,CAAT;AACA,QAAIE,MAAM,EAAV;AACA,SAAK,IAAIC,IAAE,CAAX,EAAcA,IAAEH,IAAhB,EAAsBG,GAAtB,EAA2B;AACzB,UAAIC,KAAKD,CAAT;AACAF,SAAGI,KAAH,mBAAS,aAAY;AACnB,cAAM,uBAAM,MAAMF,IAAI,EAAhB,CAAN;AACAD,YAAII,IAAJ,CAASF,EAAT;AACD,OAHD;AAID;;AAEDH,OAAGM,GAAH;AACA,UAAMN,GAAGO,oBAAH,EAAN;;AAEA,sBAAON,GAAP,EAAYO,EAAZ,CAAeC,GAAf,CAAmB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAnB;AACD,GAhBD;AAiBD,CAlBD","file":"ThreadPool.test.js","sourcesContent":["import ThreadPool from './ThreadPool'\r\nimport { sleep } from './asyncUtils'\r\nimport { expect } from 'chai'\r\n\r\ndescribe('ThreadPool', () => {\r\n  it('runs queued functions in parallel', async () => {\r\n    let nums = 3\r\n    let tp = new ThreadPool(nums)\r\n    let res = []\r\n    for (let i=0; i<nums; i++) {\r\n      let _i = i\r\n      tp.queue(async () => {\r\n        await sleep(100 - i * 10)\r\n        res.push(_i)\r\n      })\r\n    }\r\n\r\n    tp.run()\r\n    await tp.closeAndWaitComplete()\r\n\r\n    expect(res).to.eql([2,1,0])\r\n  })\r\n})"]}